package com.swkim.myboard.security;

import java.time.Instant;
import java.time.temporal.ChronoUnit;
import java.util.Date;

import org.springframework.stereotype.Service;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;

@Service
public class TokenProvider {
	// JWT 생성 및 검증을 위한 키
	private static final String SECURITY_KEY = "jwtseckey!@"; // 이걸로 암호화/복호화
	
	// JWT 생성하는 메서드
	public String create (String userEmail) {
		// 만료날짜를 현재 날짜 + 1시간으로 설정
		Date exprTime = Date.from(Instant.now().plus(1, ChronoUnit.HOURS));
		
		// JWT를 생성
		return Jwts.builder()
				// 암호화에 사용될 알고리즘, 키
				.signWith(SignatureAlgorithm.HS512, SECURITY_KEY)
				// JWT 제목, 생성일, 만료일
				.setSubject(userEmail).setIssuedAt(new Date()).setExpiration(exprTime)
				// 생성
				.compact();
	}
	
	public String validate (String token) {
		Claims claims = Jwts.parser().setSigningKey(SECURITY_KEY).parseClaimsJws(token).getBody();
		
		return claims.getSubject();
	}
}
