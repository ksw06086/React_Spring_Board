package com.swkim.myboard.filter;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.StringUtils;
import org.springframework.web.filter.OncePerRequestFilter;

import com.swkim.myboard.security.TokenProvider;

public class JwtAuthencationFilter extends OncePerRequestFilter{

	// request가 들어왔을 때 Request Header의 Authorization 필드의 Bearer Token을 가져옴
	// 가져온 토큰을 검증하고 검증 결과를 SecurityContext에 추가
	
	@Autowired private TokenProvider tokenProvider;
	
	@Override
	protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
			throws ServletException, IOException {
		String token = parseBeareToken(request);
		
		// token이 null이 아니고, 문자열로도 null이 아니면 
		if(token != null && !token.equalsIgnoreCase("null"))
		
	}
	
	// Request Header의 Authorization 필드의 Bearer Token을 가져오는 메서드
	public String parseBeareToken(HttpServletRequest request) {
		String bearerToken = request.getHeader("Authorization");
		
		if(StringUtils.hasText(bearerToken) && bearerToken.startsWith("Bearer "))
			return bearerToken.substring(7);
		return null;
	}

}
